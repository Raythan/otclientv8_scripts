<<<<<<< HEAD
local lastPos = nil
local lastDirection = nil
local followTarget = storage.followLeader or ""

local followMacro = macro(1000, "Follow", function()
    if not g_game.isOnline() then
        followMacro:turnOff()
        return
    end

    followTarget = storage.followLeader
    local leader = g_game.getCreatureByName(followTarget)

    if leader then
        g_game.follow(leader)
        lastPos = leader:getPosition()
        lastDirection = leader:getDirection()
    elseif lastPos then
        g_game.walk(lastPos)
    end
end)

UI.Label("Follow Player:")
addTextEdit("playerToFollow", storage.followLeader or "", function(widget, text)
    storage.followLeader = text
    followTarget = text
end)

local function useNearbyItemsAndSpells(centerPos)
    local positions = {
        { x = centerPos.x - 1, y = centerPos.y - 1, z = centerPos.z },
        { x = centerPos.x,     y = centerPos.y - 1, z = centerPos.z },
        { x = centerPos.x + 1, y = centerPos.y - 1, z = centerPos.z },
        { x = centerPos.x - 1, y = centerPos.y,     z = centerPos.z },
        { x = centerPos.x,     y = centerPos.y,     z = centerPos.z },
        { x = centerPos.x + 1, y = centerPos.y,     z = centerPos.z },
        { x = centerPos.x - 1, y = centerPos.y + 1, z = centerPos.z },
        { x = centerPos.x,     y = centerPos.y + 1, z = centerPos.z },
        { x = centerPos.x + 1, y = centerPos.y + 1, z = centerPos.z }
    }

    for i, pos in ipairs(positions) do
        schedule(i * 150, function()
            local tile = g_map.getTile(pos)
            if tile then
                local item = tile:getTopUseThing()
                if item then
                    g_game.use(item)
                end
            end

            if i == #positions then
                schedule(100, function() say('exani tera') end)
                schedule(400, function() say('exani hur "up"') end)
                schedule(700, function() say('exani hur "down"') end)
            end
        end)
    end
end

onCreaturePositionChange(function(creature, newPos, oldPos)
    if not followMacro.isOn() then return end
    if not creature then return end

    if creature:getName() == followTarget then
        lastPos = oldPos
        lastDirection = creature:getDirection()

        if player:getPosition() ~= oldPos then
             autoWalk(oldPos)
        end

    elseif creature:isLocalPlayer() then
        if getCreatureByName(followTarget) == nil and lastPos and (newPos.z ~= lastPos.z) then
            schedule(200, function()
                if getCreatureByName(followTarget) == nil then
                    useNearbyItemsAndSpells(player:getPosition())
                end
            end)
=======
-- RAYTHAN
--Funcionando travou o gráfico
--4o
--Girando para usar hur up/down
Follow = macro(1000, "Follow", function()
    nome = storage.followLeader
end)

UI.Label("Follow Player:")
addTextEdit("playerToFollow", storage.followLeader or "Heeey", function(widget, text)
    storage.followLeader = text
    followTarget = tostring(text)
end)

nome = storage.followLeader
pos_p = player:getPosition()
p = getCreatureByName(nome)

local function useObjectsAroundLeader()
    if Follow.isOn() and lastPos ~= nil and (player:getPosition().z ~= lastPos.z) then
        -- Verificar se o personagem está na mesma posição que o líder
        local playerPos = player:getPosition()
        if playerPos.x ~= lastPos.x or playerPos.y ~= lastPos.y or playerPos.z ~= lastPos.z then
            autoWalk(lastPos)
            
            schedule(1000, function() -- Aguarda 1 segundo para garantir que o jogador tentou caminhar até a posição
                local updatedPlayerPos = player:getPosition()
                if updatedPlayerPos.x == lastPos.x and updatedPlayerPos.y == lastPos.y and updatedPlayerPos.z == lastPos.z then
                    -- Usar objetos em uma matriz de 9 posições ao redor da última posição conhecida do líder com atraso
                    local positions = {
                        {x = lastPos.x - 1, y = lastPos.y - 1, z = lastPos.z},
                        {x = lastPos.x,     y = lastPos.y - 1, z = lastPos.z},
                        {x = lastPos.x + 1, y = lastPos.y - 1, z = lastPos.z},
                        {x = lastPos.x - 1, y = lastPos.y,     z = lastPos.z},
                        {x = lastPos.x,     y = lastPos.y,     z = lastPos.z},
                        {x = lastPos.x + 1, y = lastPos.y,     z = lastPos.z},
                        {x = lastPos.x - 1, y = lastPos.y + 1, z = lastPos.z},
                        {x = lastPos.x,     y = lastPos.y + 1, z = lastPos.z},
                        {x = lastPos.x + 1, y = lastPos.y + 1, z = lastPos.z}
                    }
                    
                    for i, pos in ipairs(positions) do
                        schedule(i * 400, function()
                            local useTile = g_map.getTile(pos)
                            if useTile then
                                g_game.use(useTile:getTopUseThing())
                            end
                            -- Tentar usar as magias "exani tera", "exani hur "up"" e "exani hur "down"" na última posição conhecida do líder
                            if i == #positions then
                                say('exani tera')
                                schedule(300, function()
                                    say('exani hur "up')
                                end)
                                schedule(600, function()
                                    say('exani hur "down')
                                end)
                            end
                        end)
                    end
                end
            end)
        else
            -- Se o jogador já está na posição correta, usar os objetos imediatamente com atraso
            local positions = {
                {x = lastPos.x - 1, y = lastPos.y - 1, z = lastPos.z},
                {x = lastPos.x,     y = lastPos.y - 1, z = lastPos.z},
                {x = lastPos.x + 1, y = lastPos.y - 1, z = lastPos.z},
                {x = lastPos.x - 1, y = lastPos.y,     z = lastPos.z},
                {x = lastPos.x,     y = lastPos.y,     z = lastPos.z},
                {x = lastPos.x + 1, y = lastPos.y,     z = lastPos.z},
                {x = lastPos.x - 1, y = lastPos.y + 1, z = lastPos.z},
                {x = lastPos.x,     y = lastPos.y + 1, z = lastPos.z},
                {x = lastPos.x + 1, y = lastPos.y + 1, z = lastPos.z}
            }

            for i, pos in ipairs(positions) do
                schedule(i * 400, function()
                    local useTile = g_map.getTile(pos)
                    if useTile then
                        g_game.use(useTile:getTopUseThing())
                    end
                    -- Tentar usar as magias "exani tera", "exani hur "up"" e "exani hur "down"" na última posição conhecida do líder
                    if i == #positions then
                        say('exani tera')
                        schedule(300, function()
                            say('exani hur "up')
                        end)
                        schedule(600, function()
                            say('exani hur "down')
                        end)
                    end
                end)
            end
        end
        -- Reagendar a si mesmo para continuar o loop com maior intervalo
        schedule(600, useObjectsAroundLeader)
    end
end

onCreaturePositionChange(function(creature, newPos, oldPos)
    if Follow.isOn() then
        -- Quando a posição do jogador muda
        if creature:getName() == player:getName() and getCreatureByName(nome) == nil and newPos and oldPos and newPos.z > oldPos.z then
            say('exani tera')
            for i = -1, 1 do
                for j = -1, 1 do
                    local useTile = g_map.getTile({x = posx() + i, y = posy() + j, z = posz()})
                    if useTile then
                        g_game.use(useTile:getTopUseThing())
                    end
                end
            end
>>>>>>> a426d0e66a225556e6af2dade8a349aad8f401ea
        end

        -- Quando a posição do líder muda
        if creature:getName() == nome then
            lastDirection = creature:getDirection()
            if newPos == nil and oldPos then
                lastPos = oldPos

                schedule(200, function()
                    autoWalk(oldPos)
                end)

                schedule(1000, function()
                    for i = -1, 1 do
                        for j = -1, 1 do
                            local useTile = g_map.getTile({x = posx() + i, y = posy() + j, z = posz()})
                            if useTile then
                                g_game.use(useTile:getTopUseThing())
                            end
                        end
                    end
                end)
            end

            if newPos and oldPos and oldPos.z == newPos.z then
                schedule(300, function()
                    local useTile = g_map.getTile({x = oldPos.x, y = oldPos.y, z = oldPos.z})
                    if useTile then
                        local topThing = useTile:getTopThing()
                        if not useTile:isWalkable() then
                            use(topThing)
                        end
                    end
                end)
                autoWalk({x = oldPos.x, y = oldPos.y, z = oldPos.z})
            elseif newPos and oldPos then
                lastPos = oldPos
                autoWalk(oldPos)
                for i = 1, 6 do
                    schedule(i * 200, function()
                        autoWalk(oldPos)
                        if getDistanceBetween(pos(), oldPos) == 0 and (posz() > newPos.z and getCreatureByName(nome) == nil) then
                            say('exani tera')
                        end
                    end)
                end
                local useTile = g_map.getTile({x = newPos.x, y = newPos.y - 1, z = oldPos.z})
                if useTile then
                    g_game.use(useTile:getTopUseThing())
                end
            end
        end

        -- Aplicar a direção do líder
        if lastDirection ~= nil then
            turn(lastDirection)
        end

        -- Iniciar o loop contínuo com maior intervalo
        schedule(300, useObjectsAroundLeader)
    end
end)
<<<<<<< HEAD

onDisappear(function(creature)
    if not followMacro.isOn() then return end
    if not creature then return end

    if creature:getName() == followTarget then
        local lastKnownPos = creature:getPosition()
        lastPos = lastKnownPos
        
        schedule(300, function()
            if getCreatureByName(followTarget) == nil then
                autoWalk(lastKnownPos)
            end
        end)

        schedule(1000, function()
            if getCreatureByName(followTarget) == nil and player:getPosition() == lastKnownPos then
                 useNearbyItemsAndSpells(lastKnownPos)
            end
        end)
    end
end)
=======
>>>>>>> a426d0e66a225556e6af2dade8a349aad8f401ea
