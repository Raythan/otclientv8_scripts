--[[
  SCRIPT FINAL - VERSÃO SILENCIOSA
  Desativa o macro automaticamente em caso de erro, sem exibir alertas.
]]

-- Interface
UI.Label("Auto Follow")
addTextEdit("followleader", storage.followLeader or "player name", function(widget, text)
  storage.followLeader = text
end)

-- Variáveis
local toFollowPos = {}
local stairToUse = nil
local followMacro = nil
local followCheckbox = nil -- Variável para guardar o checkbox da UI

-- Função simplificada para parar o script em caso de erro
function handleError()
  if followMacro and followMacro.isOn and followMacro:isOn() then
    followMacro:off()
    -- Desmarca a caixa de seleção na interface para feedback visual
    if followCheckbox then
      followCheckbox:setChecked(false)
    end
  end
end

-- Macro principal de seguir
followMacro = macro(200, "Follow", function()
  -- pcall executa o código de forma protegida
  local success = pcall(function()
    -------------------------------------------------
    -- Início da Lógica Principal
    -------------------------------------------------
    if player:isWalking() then return end
    local leader = getCreatureByName(storage.followLeader)
    if not leader then return end

    local ppos = player:getPosition()
    local lpos = leader:getPosition()

    if stairToUse then
      if ppos:isEqual(stairToUse) then
        useGround(stairToUse)
        stairToUse = nil
        delay(500)
      else
        autoWalk(stairToUse, 10, {precision=0})
      end
      return
    end

    if ppos.z == lpos.z and ppos:distance(lpos) > 2 then
      autoWalk(lpos, 20, {ignoreNonPathable=false, precision=2, marginMin=1, marginMax=2})
      delay(100)
    end
    -------------------------------------------------
    -- Fim da Lógica Principal
    -------------------------------------------------
  end)

  -- Se a execução falhou (success == false), chama a função para parar tudo.
  if not success then
    handleError()
  end
end)

-- Gatilho de mudança de posição
onCreaturePositionChange(function(creature, oldPos, newPos)
  local success = pcall(function()
    if creature:getName() == storage.followLeader then
      toFollowPos[newPos.z] = newPos
      if newPos.z ~= oldPos.z and oldPos.z == player:getPosition().z then
        stairToUse = oldPos
      end
    end
  end)

  if not success then
    handleError()
  end
end)

-- Checkbox para controle manual
followCheckbox = UI.Checkbox("Ativar Follow", function(widget, checked)
  if checked then
    followMacro:on()
  else
    followMacro:off()
  end
end)
-- Garante que o macro comece desligado
followMacro:off()

UI.Separator()